<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swust.fund.dao.AnswerMapper">
    <cache type="org.mybatis.caches.redis.RedisCache"/>
    <resultMap id="BaseResultMap" type="com.swust.fund.entity.Answer">
        <id column="answer_id" property="answerId" jdbcType="INTEGER"/>
        <result column="answer_rank" property="answerRank" jdbcType="TINYINT"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="question_id" property="questionId" jdbcType="INTEGER"/>
        <result column="answer_time" property="answerTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    answer_id, answer_rank, user_id, question_id, answer_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_answer
        where answer_id = #{answerId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_answer
    where answer_id = #{answerId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.swust.fund.entity.Answer">
    insert into t_answer (answer_id, answer_rank, user_id, 
      question_id, answer_time)
    values (#{answerId,jdbcType=INTEGER}, #{answerRank,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, 
      #{questionId,jdbcType=INTEGER}, #{answerTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.swust.fund.entity.Answer">
        insert into t_answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="answerId != null">
                answer_id,
            </if>
            <if test="answerRank != null">
                answer_rank,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="questionId != null">
                question_id,
            </if>
            <if test="answerTime != null">
                answer_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="answerId != null">
                #{answerId,jdbcType=INTEGER},
            </if>
            <if test="answerRank != null">
                #{answerRank,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                #{questionId,jdbcType=INTEGER},
            </if>
            <if test="answerTime != null">
                #{answerTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.swust.fund.entity.Answer">
        update t_answer
        <set>
            <if test="answerRank != null">
                answer_rank = #{answerRank,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                question_id = #{questionId,jdbcType=INTEGER},
            </if>
            <if test="answerTime != null">
                answer_time = #{answerTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where answer_id = #{answerId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.swust.fund.entity.Answer">
    update t_answer
    set answer_rank = #{answerRank,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      question_id = #{questionId,jdbcType=INTEGER},
      answer_time = #{answerTime,jdbcType=TIMESTAMP}
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
    <insert id="insertAnswerList">
        insert into t_answer ( answer_rank, user_id,
        question_id, answer_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.answerRank},#{item.userId},#{item.questionId},#{item.answerTime})
        </foreach>
    </insert>
</mapper>