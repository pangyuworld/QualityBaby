<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swust.fund.dao.AspectDetailMapper">
    <resultMap id="BaseResultMap" type="com.swust.fund.entity.AspectDetail">
        <id column="detail_id" property="detailId" jdbcType="INTEGER"/>
        <result column="detail_name" property="detailName" jdbcType="VARCHAR"/>
        <result column="detail_show" property="detailShow" jdbcType="BIT"/>
        <result column="aspect_id" property="aspectId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    detail_id, detail_name, detail_show, aspect_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_aspect_detail
        where detail_id = #{detailId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_aspect_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.swust.fund.entity.AspectDetail">
    insert into t_aspect_detail (detail_id, detail_name, detail_show, 
      aspect_id)
    values (#{detailId,jdbcType=INTEGER}, #{detailName,jdbcType=VARCHAR}, #{detailShow,jdbcType=BIT}, 
      #{aspectId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.swust.fund.entity.AspectDetail">
        insert into t_aspect_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="detailId != null">
                detail_id,
            </if>
            <if test="detailName != null">
                detail_name,
            </if>
            <if test="detailShow != null">
                detail_show,
            </if>
            <if test="aspectId != null">
                aspect_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="detailId != null">
                #{detailId,jdbcType=INTEGER},
            </if>
            <if test="detailName != null">
                #{detailName,jdbcType=VARCHAR},
            </if>
            <if test="detailShow != null">
                #{detailShow,jdbcType=BIT},
            </if>
            <if test="aspectId != null">
                #{aspectId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.swust.fund.entity.AspectDetail">
        update t_aspect_detail
        <set>
            <if test="detailName != null">
                detail_name = #{detailName,jdbcType=VARCHAR},
            </if>
            <if test="detailShow != null">
                detail_show = #{detailShow,jdbcType=BIT},
            </if>
            <if test="aspectId != null">
                aspect_id = #{aspectId,jdbcType=INTEGER},
            </if>
        </set>
        where detail_id = #{detailId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.swust.fund.entity.AspectDetail">
    update t_aspect_detail
    set detail_name = #{detailName,jdbcType=VARCHAR},
      detail_show = #{detailShow,jdbcType=BIT},
      aspect_id = #{aspectId,jdbcType=INTEGER}
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
    <select id="selectAllAspectDetail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_aspect_detail
        <if test="showAll != true">
            where detail_show=true
        </if>
    </select>
    <select id="selectAllAspectDetailByAspect" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_aspect_detail
        where aspect_id=#{detailId}
        <if test="showAll != true">
            ,detail_show=true
        </if>
    </select>
    <insert id="insertScore">
        insert into t_user_aspect_detail(user_id,detail_score,detail_id)
        values
        <foreach collection="scoreMap" item="value" index="key" separator=",">
            (#{userId},#{value},#{key})
        </foreach>
    </insert>
</mapper>