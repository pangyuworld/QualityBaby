<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swust.fund.dao.AspectMapper">
    <cache type="org.mybatis.caches.redis.RedisCache"/>
    <resultMap id="BaseResultMap" type="com.swust.fund.entity.Aspect">
        <id column="aspect_id" property="aspectId" jdbcType="INTEGER"/>
        <result column="aspect_name" property="aspectName" jdbcType="VARCHAR"/>
        <result column="aspect_show" property="aspectShow" jdbcType="BIT"/>
        <result column="aspect_score" property="aspectScore" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    aspect_id, aspect_name, aspect_show,aspect_score
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_aspect
        where aspect_id = #{aspectId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_aspect
    where aspect_id = #{aspectId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.swust.fund.entity.Aspect">
    insert into t_aspect (aspect_id, aspect_name, aspect_show,aspect_score
      )
    values (#{aspectId,jdbcType=INTEGER}, #{aspectName,jdbcType=VARCHAR}, #{aspectShow,jdbcType=BIT},#{aspectScore,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.swust.fund.entity.Aspect">
        insert into t_aspect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="aspectId != null">
                aspect_id,
            </if>
            <if test="aspectName != null">
                aspect_name,
            </if>
            <if test="aspectShow != null">
                aspect_show,
            </if>
            <if test="aspectScore != null">
                aspect_score,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="aspectId != null">
                #{aspectId,jdbcType=INTEGER},
            </if>
            <if test="aspectName != null">
                #{aspectName,jdbcType=VARCHAR},
            </if>
            <if test="aspectShow != null">
                #{aspectShow,jdbcType=BIT},
            </if>
            <if test="aspectScore != null">
                #{aspectScore,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.swust.fund.entity.Aspect">
        update t_aspect
        <set>
            <if test="aspectName != null">
                aspect_name = #{aspectName,jdbcType=VARCHAR},
            </if>
            <if test="aspectShow != null">
                aspect_show = #{aspectShow,jdbcType=BIT},
            </if>
            <if test="aspectScore != null">
                aspect_score=#{aspectScore,jdbcType=INTEGER},
            </if>
        </set>
        where aspect_id = #{aspectId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.swust.fund.entity.Aspect">
    update t_aspect
    set aspect_name = #{aspectName,jdbcType=VARCHAR},
                aspect_score=#{aspectScore,jdbcType=INTEGER},
      aspect_show = #{aspectShow,jdbcType=BIT}
    where aspect_id = #{aspectId,jdbcType=INTEGER}
  </update>
    <select id="selectAllAspect" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_aspect
        <if test="showAll != true">
            where aspect_show=true
        </if>
    </select>
    <select id="selectScoreByUser" parameterType="int" resultType="map">
        SELECT
            a.aspect_id as aspect_id,
            a.aspect_name as aspect_name,
            a.aspect_show  as aspect_show,
            a.aspect_score as aspect_score,
            SUM(c.detail_score) as score
        FROM
            t_aspect a
        INNER JOIN t_aspect_detail b ON a.aspect_id=b.aspect_id
        inner JOIN t_user_aspect_detail c ON c.detail_id=b.detail_id
        where c.user_id=#{userId}
        GROUP BY a.aspect_id
    </select>


    <!-- 查找所有的aspectId -->
    <select id="selectAllAspectId" resultType="int">
        select
        aspect_id
        from t_aspect
    </select>
    <!-- 根据aspectId查找用户分数排名 -->
    <select id="selectAllUserAspectSort" parameterType="int" resultType="int">
        select
        a.user_id
        from t_user_aspect_detail a
        inner join t_aspect_detail b on b.detail_id=a.detail_id
        WHERE b.aspect_id=#{aspectId}
        GROUP BY a.user_id
        ORDER BY sum(a.detail_score) desc
    </select>
    <!-- 更新成绩 -->
    <insert id="updateAspectSort" parameterType="map">
        INSERT INTO t_user_aspect_sort ( user_id, aspect_id, aspect_sort )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId},#{item.aspectId} ,#{item.aspectSort})
        </foreach>
    </insert>
    <!-- 清空成绩表 -->
    <delete id="deleteAspectSort">
        delete from t_user_aspect_sort
    </delete>
</mapper>